# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1u15Q9RuJrLMFEpJfvdb-di6QC-ZRgN6f
"""

!pip install numpy scipy scikit-learn networkx

# 1. 清理旧环境（建议重启内核后执行）
!pip uninstall -y torch torchvision torchaudio torch-geometric torch-scatter torch-sparse torch-cluster torch-spline-conv numpy

# 2. 安装 PyTorch 2.1 CPU 版本
!pip install torch==2.1.0 torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu

# 3. 安装兼容 PyTorch 2.1 的 PyG（PyTorch Geometric）依赖
!pip install torch-scatter torch-sparse torch-cluster torch-spline-conv torch-geometric -f https://data.pyg.org/whl/torch-2.1.0+cpu.html

# 4. 降级 NumPy 到 1.24 以解决兼容性问题
!pip install numpy==1.24.4

# 安装依赖包
!pip install torch torch-geometric scipy numpy

# 如果需要特定版本的PyTorch Geometric
!pip install torch-scatter torch-sparse torch-cluster torch-spline-conv torch-geometric -f https://data.pyg.org/whl/torch-1.12.0+cu113.html

!pip install torch-scatter torch-sparse torch-cluster torch-spline-conv pyg-lib \
  -f https://data.pyg.org/whl/torch-2.2.0+cu121.html

#!pip install numpy==1.25.2
!pip install --upgrade numpy==1.26.4 scipy==1.11.4

!python -m pip uninstall -y pyg-lib torch-scatter torch-sparse torch-cluster torch-spline-conv

# 安装 CPU 轮子（与 torch==2.2.x 匹配）
!python -m pip install --no-cache-dir \
  torch-scatter==2.1.2 torch-sparse==0.6.18 torch-cluster==1.6.3 torch-spline-conv==1.2.2 pyg-lib==0.4.0 \
  -f https://data.pyg.org/whl/torch-2.2.0+cpu.html

#图神经模型对比测试
!python train.py --run_semi_comparison

#传统模型测试
!python train.py --run_all_baselines --data_dir small_multirel_dataset

!python train.py --data_dir dataset --semi_supervised \
    --walk_length 10 --num_walks 5 --window_size 3 --num_negative_samples 3



#CARE-GNN原模型结果
!python CAREGNN.py

#环境安装
!pip install torch torchvision torchaudio
!pip install scikit-learn
!pip install scipy
!pip install matplotlib seaborn

#原模型跑一下
!python CryptoSSGNN0808_fast.py --data_dir dataset --epochs 80 --eval_every 50

#传统模型
!python traditional_ml_baseline.py --data_dir small_multirel_dataset --use_graph_features

!python train.py

# 运行NoViewAttn版本
!python CryptoSSGNN0808_fast.py --data_dir dataset --cuda --disable_view_attention

#把两个注意力去掉的实验
!python CryptoSSGNN0808_fast.py --data_dir dataset --cuda --disable_view_attention
!python CryptoSSGNN0808_fast.py --data_dir dataset --cuda --disable_node_attention

#四个消融实验
!python run_four_configs.py --script CryptoSSGNN0808_fast.py --data_dir dataset --cuda --epochs 80 --eval_every 50 --alpha 0.5 --seed 42

#α参数实验
for a in [0, 0.2, 0.4, 0.5, 0.6, 0.8, 1]:
    print(f"== α = {a} ==")
    !python CryptoSSGNN0808_fast.py --data_dir dataset --cuda --disable_node_attention --alpha {a} --epochs 80 --eval_every 50

#属性图only
!python CryptoSSGNN0808_fast.py --data_dir dataset_attr_only --cuda \
  --disable_node_attention --alpha 0.5

#relation0 only
!python CryptoSSGNN0808_fast.py --data_dir dataset_rel0_only --cuda \
  --disable_node_attention --alpha 0.5
#relation1 only
!python CryptoSSGNN0808_fast.py --data_dir dataset_rel1_only --cuda \
  --disable_node_attention --alpha 0.5
#relation2 only
!python CryptoSSGNN0808_fast.py --data_dir dataset_rel2_only --cuda \
  --disable_node_attention --alpha 0.5
#relation3 only
!python CryptoSSGNN0808_fast.py --data_dir dataset_rel3_only --cuda \
  --disable_node_attention --alpha 0.5

#多关系
!python CryptoSSGNN0808_fast.py --data_dir dataset --cuda \
  --disable_node_attention --alpha 0.5

#属性图构造的邻居数（k_neighbors）敏感性
!python CryptoSSGNN0808_fast.py --data_dir fixed_semisup_dataset --alpha 0.5 --hidden_dim 64 --num_layers 2 --k_neighbors 5
!python CryptoSSGNN0808_fast.py --data_dir fixed_semisup_dataset --alpha 0.5 --hidden_dim 64 --num_layers 2 --k_neighbors 10
!python CryptoSSGNN0808_fast.py --data_dir fixed_semisup_dataset --alpha 0.5 --hidden_dim 64 --num_layers 2 --k_neighbors 20
!python CryptoSSGNN0808_fast.py --data_dir fixed_semisup_dataset --alpha 0.5 --hidden_dim 64 --num_layers 2 --k_neighbors 30

!python CryptoSSGNN0808_fast.py --data_dir fixed_semisup_dataset --alpha 0.5 --hidden_dim 64 --num_layers 2 --k_neighbors 25
!python CryptoSSGNN0808_fast.py --data_dir fixed_semisup_dataset --alpha 0.5 --hidden_dim 64 --num_layers 2 --k_neighbors 35

#表征维度（Hidden Dimension）敏感性
!python CryptoSSGNN0808_fast.py --data_dir fixed_semisup_dataset --alpha 0.5 --num_layers 2 --k_neighbors 10 --hidden_dim 32
!python CryptoSSGNN0808_fast.py --data_dir fixed_semisup_dataset --alpha 0.5 --num_layers 2 --k_neighbors 10 --hidden_dim 64
!python CryptoSSGNN0808_fast.py --data_dir fixed_semisup_dataset --alpha 0.5 --num_layers 2 --k_neighbors 10 --hidden_dim 96
!python CryptoSSGNN0808_fast.py --data_dir fixed_semisup_dataset --alpha 0.5 --num_layers 2 --k_neighbors 10 --hidden_dim 128

!python CryptoSSGNN0808_fast.py --data_dir fixed_semisup_dataset --alpha 0.5 --num_layers 2 --k_neighbors 10 --hidden_dim 48

#结构深度（Number of Layers）敏感性
!python CryptoSSGNN0808_fast.py --data_dir fixed_semisup_dataset --alpha 0.5 --hidden_dim 64 --k_neighbors 10 --num_layers 1
!python CryptoSSGNN0808_fast.py --data_dir fixed_semisup_dataset --alpha 0.5 --hidden_dim 64 --k_neighbors 10 --num_layers 2
!python CryptoSSGNN0808_fast.py --data_dir fixed_semisup_dataset --alpha 0.5 --hidden_dim 64 --k_neighbors 10 --num_layers 3

!pip install torch numpy scipy scikit-learn optuna

!python train.py --data_dir dataset --optimize_hyperparams --cross_validation

!python train.py --data_dir dataset \
    --optimize_hyperparams \
    --n_trials 50 \
    --cross_validation \
    --k_folds 5 \
    --semi_supervised

import torch
from torch_geometric.data import Data

!python train.py

!python complete_simple_runner.py

!python experiment_runner.py --full_experiments

!python experiment_runner.py --quick

!python train.py small_multirel_dataset







# Commented out IPython magic to ensure Python compatibility.
# %cd /content

# 如果上面失败，试试这个，分割数据集时使用的
!pip install torch-scatter -f https://data.pyg.org/whl/torch-2.0.0+cpu.html
!pip install torch-geometric

!python train.py

!python train_care_gnn.py --data_dir thesis_multirel_15k_dataset



# 若报错缺少 scatter，使用 PyG 推荐方式
!pip install torch-scatter -f https://data.pyg.org/whl/torch-2.0.0+cpu.html







!pip install torch numpy scipy scikit-learn

!python data_preprocessing.py --input_dir /content/dataset1 --output_dir /content/dataset --train_ratio 0.6 --val_ratio 0.2 --test_ratio 0.2 --normalize standard

!python train.py --data_dir dataset



!python train_care_gnn.py --data_dir dataset





from google.colab import drive
drive.mount('/content/drive')



!python run_paper_experiments.py --data_dir small_multirel_dataset --save_dir paper_results

